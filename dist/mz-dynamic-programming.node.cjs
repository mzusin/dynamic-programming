/*
https://github.com/mzusin/dynamic-programming
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
var c=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var a=Object.getOwnPropertyNames;var f=Object.prototype.hasOwnProperty;var p=(e,r)=>{for(var t in r)c(e,t,{get:r[t],enumerable:!0})},h=(e,r,t,n)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of a(r))!f.call(e,o)&&o!==t&&c(e,o,{get:()=>r[o],enumerable:!(n=m(r,o))||n.enumerable});return e};var l=e=>h(c({},"__esModule",{value:!0}),e);var B={};p(B,{countBits:()=>w,fibonacciNumberIterative:()=>v,fibonacciNumberRecursive:()=>g,minCostClimbingStairsRecursive:()=>M});module.exports=l(B);var g=e=>{let r=new Map,t=n=>{if(n<=1)return n;if(r.has(n))return r.get(n);let o=t(n-1)+t(n-2);return r.set(n,o),o};return t(e)},v=e=>{let r=[0,1];if(e<=1)return e;for(let t=2;t<=e;t++)r.push(r[t-1]+r[t-2]);return r[r.length-1]},w=e=>{var t;let r=[];for(let n=0;n<=e;n++){let o=n>>1,s=n&1;r[n]=((t=r[o])!=null?t:0)+s}return r},M=e=>{let r=[],t=s=>{if(s>=e.length)return 0;if(r[s]!==void 0)return r[s];let i=t(s+1),b=t(s+2),u=e[s]+Math.min(i,b);return r[s]=u,u},n=t(0),o=t(1);return Math.min(n,o)};0&&(module.exports={countBits,fibonacciNumberIterative,fibonacciNumberRecursive,minCostClimbingStairsRecursive});
