/*
https://github.com/mzusin/dynamic-programming
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
(()=>{var a=Object.defineProperty;var u=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,h=Object.prototype.propertyIsEnumerable;var m=(t,r,e)=>r in t?a(t,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[r]=e,b=(t,r)=>{for(var e in r||(r={}))l.call(r,e)&&m(t,e,r[e]);if(u)for(var e of u(r))h.call(r,e)&&m(t,e,r[e]);return t};var w=(t,r)=>{for(var e in r)a(t,e,{get:r[e],enumerable:!0})};var s={};w(s,{countBits:()=>D,fibonacciNumberIterative:()=>v,fibonacciNumberRecursive:()=>g,minCostClimbingStairsRecursive:()=>z});var g=t=>{let r=new Map,e=n=>{if(n<=1)return n;if(r.has(n))return r.get(n);let c=e(n-1)+e(n-2);return r.set(n,c),c};return e(t)},v=t=>{let r=[0,1];if(t<=1)return t;for(let e=2;e<=t;e++)r.push(r[e-1]+r[e-2]);return r[r.length-1]},D=t=>{var e;let r=[];for(let n=0;n<=t;n++){let c=n>>1,o=n&1;r[n]=((e=r[c])!=null?e:0)+o}return r},z=t=>{let r=[],e=o=>{if(o>=t.length)return 0;if(r[o]!==void 0)return r[o];let f=e(o+1),p=e(o+2),i=t[o]+Math.min(f,p);return r[o]=i,i},n=e(0),c=e(1);return Math.min(n,c)};var M=b({},s);window.mzDP=window.mzDP||M;})();
